/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    int countDigitOne(int n) {
        vector<int> V;
        while (n) {
            V.push_back(n % 10);
            n /= 10;
        }

        reverse(V.begin(), V.end());
        int sz = V.size();

        vector<vector<int>> dp(sz, vector<int>(10, -1));
        function<int(int dep, int num, bool limit)> dfs = [&](int dep, int num, bool limit) -> int {
            if (dep == sz) {
                return num;
            }
            if (!limit && dp[dep][num] != -1) return dp[dep][num];
            int LIMIT = limit ? V[dep] : 9;
            int res = 0;
            for (int i = 0; i <= LIMIT; i++) {
                if (i == 1) {
                    res += dfs(dep + 1, num + 1, limit & (i == LIMIT));
                } else {
                    res += dfs(dep + 1, num, limit & (i == LIMIT));
                }
            }
            if (!limit) dp[dep][num] = res;
            return res;
        };
        return dfs(0, 0, true);
    }
};