/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

vector<string> singles = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
vector<string> teens = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
vector<string> tens = {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
vector<string> thousands = {"", "Thousand", "Million", "Billion"};

class Solution {
   public:
    string numberToWords(int num) {
        if (num == 0) return "Zero";
        
        vector<string> V;

        auto work = [&](int idx, int val) -> string {
            if (val == 0) return "";
            string s = "";
            if (val >= 100) {
                s += singles[val / 100] + " Hundred"; 
                val %= 100;
                if (val) s += " ";
            }
            if (val < 10) {
                s += singles[val];
            } else if (val >= 10 && val < 20) {
                s += teens[val - 10];
            } else {
                s += tens[val / 10];
                if (val % 10) {
                    s += " " + singles[val % 10];
                }
            }
            if (idx != 0) s += " " + thousands[idx];
            return s;
        };

        for (int i = 0; i < 4; i++) {
            int val = num % 1000;
            num /= 1000;
            string s = work(i, val);
            if (s != "")
                V.push_back(s);
        }
        debug(V);

        string ans = "";
        for (int i = V.size() - 1; i >= 0; i--) {
            ans += V[i];
            if (i != 0) ans += " ";
        }
        return ans;

    }
};