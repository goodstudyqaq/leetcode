/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    vector<int> smallestRange(vector<vector<int>>& nums) {
        set<pair<int, int>> S;
        int k = nums.size();

        vector<int> IDX(k);
        for (int i = 0; i < k; i++) {
            S.insert({nums[i][0], i});
            IDX[i]++;
        }
        int ans = 1e9;
        int ansl = -1, ansr = -1;
        while (S.size()) {
            auto small = S.begin();
            auto big = prev(S.end());
            int len = big->first - small->first;
            if (ans > len || (ans == len && ansl > small->first)) {
                ans = len;
                ansl = small->first;
                ansr = big->first;
            }
            int idx = small->second;
            S.erase(small);
            if (IDX[idx] < nums[idx].size()) {
                S.insert({nums[idx][IDX[idx]], idx});
                IDX[idx]++;
            } else {
                break;
            }
        }
        return {ansl, ansr};
    }
};