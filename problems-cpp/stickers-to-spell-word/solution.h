/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    int minStickers(vector<string>& stickers, string target) {
        int n = stickers.size();
        sort(target.begin(), target.end());


        vector<vector<int>> sti(n, vector<int>(26));
        for (int i = 0; i < n; i++) {
            for (auto it : stickers[i]) {
                sti[i][it - 'a']++;
            }
        }
        unordered_map<string, int> dp;
        queue<string> Q;
        Q.push(target);
        dp[target] = 0;
        debug(target);

        
        auto work = [&](string &s, int idx) {
            string ans = "";
            auto v = sti[idx];
            for (auto it : s) {
                if (v[it - 'a'] > 0) {
                    v[it - 'a']--;
                } else {
                    ans += it;
                }
            }
            return ans;
        };
        while (!Q.empty()) {
            auto it = Q.front();
            Q.pop();
            for (int i = 0; i < n; i++) {
                string go = work(it, i);
                if (dp.count(go) == 0) {
                    dp[go] = dp[it] + 1;
                    Q.push(go);
                }
            }
        }
        if (dp.count("") == 0) return -1;
        return dp[""];
    }
};