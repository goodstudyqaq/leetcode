/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif


class Solution {
   public:
    vector<string> addOperators(string num, int target) {
        vector<string> ans;

        int n = num.size();
        function<void(string &s, int idx, long long res, long long mul)> dfs = [&](string &s, int idx, long long res, long long mul) -> void {
            if (idx == n) {
                if (res == target) {
                    ans.push_back(s);
                }
                return;
            }

            int sig = -1;
            int sz = s.size();
            if (s.size() != 0) {
                sig = s.size();
                s.push_back('0');
            }
            long long val = 0;
            for (int i = idx; i < n; i++) {
                val = val * 10 + num[i] - '0';
                s.push_back(num[i]);
                if (sig == -1) {
                    dfs(s, i + 1, val, val);
                } else {
                    s[sig] = '+';
                    dfs(s, i + 1, res + val, val);
                    s[sig] = '-';
                    dfs(s, i + 1, res - val, -val);
                    s[sig] = '*';
                    dfs(s, i + 1, res - mul + mul * val, mul * val);
                }
                if (val == 0) break;
            }
            s.resize(sz);
        };


        string s = "";
        dfs(s, 0, 0, 0);
        return ans;
    }
};