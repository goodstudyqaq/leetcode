/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        int n = position.size();
        vector<int> f(n);
        iota(f.begin(), f.end(), 0);
        sort(f.begin(), f.end(), [&](int x, int y) {
            return position[x] > position[y];
        });

        int res = 0;
        int now = 0;

        auto check = [&](int a, int b) {
            a = f[a];
            b = f[b];
            long long tmp = 1LL * speed[b] * (target - position[a]) + 1LL * speed[a] * position[b];
            long long tmp2 = 1LL * target * speed[a];
            return tmp >= tmp2;
        };

        while (now < n) {
            int go = now;
            while (go < n && check(now, go)) {
                go++;
            }
            res++;
            now = go;
        }
        return res;
    }
};