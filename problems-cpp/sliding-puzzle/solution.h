/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    int slidingPuzzle(vector<vector<int>>& board) {
        int n = 2;
        int m = 3;
        set<vector<vector<int>>> S;
        queue<pair<vector<vector<int>>, int>> Q;
        Q.push({board, 0});
        S.insert(board);

        vector<vector<int>> ed = {{1, 2, 3}, {4, 5, 0}};


        int d[4][2] = {-1, 0, 1, 0, 0, -1, 0, 1};
        while (!Q.empty()) {
            auto [now, step] = Q.front();
            Q.pop();
            if (now == ed) return step;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    if (now[i][j] == 0) {
                        for (int k = 0; k < 4; k++) {
                            int i2 = i + d[k][0], j2 = j + d[k][1];
                            if (i2 >= 0 && i2 < n && j2 >= 0 && j2 < m) {
                                auto tmp = now;
                                swap(tmp[i][j], tmp[i2][j2]);
                                if (S.count(tmp) == 0) {
                                    S.insert(tmp);
                                    Q.push({tmp, step + 1});
                                }
                            }
                        }
                    }
                }
            }
        }
        return -1;
    }
};