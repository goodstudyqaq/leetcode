/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class WordFilter {
   public:
    unordered_map<string, int> M;
    WordFilter(vector<string>& words) {
        int n = words.size();
        for (int i = 0; i < n; i++) {
            int m = words[i].size();
            string pre = "";
            for (int j = 0; j < m; j++) {
                pre += words[i][j];
                string tmp = words[i];
                reverse(tmp.begin(), tmp.end());
                string suf = "";
                for (int j = 0; j < m; j++) {
                    suf += tmp[j];
                    M[pre + " " + suf] = i;
                }
            }
        }
    }

    int f(string pref, string suff) {
        reverse(suff.begin(), suff.end());
        string s = pref + " " + suff;
        if (M.count(s) == 0) return -1;
        return M[s];
    }
};

/**
 * Your WordFilter object will be instantiated and called as such:
 * WordFilter* obj = new WordFilter(words);
 * int param_1 = obj->f(pref,suff);
 */