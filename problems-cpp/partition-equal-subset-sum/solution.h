/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = accumulate(nums.begin(), nums.end(), 0);
        if (sum % 2) return false;

        vector<bool> dp(sum + 1);
        dp[0] = true;
        for (int i = 0; i < n; i++) {
            for (int j = sum; j - nums[i] >= 0; j--) {
                if (dp[j - nums[i]]) {
                    dp[j] = 1;
                }
            }
        }
        return dp[sum / 2];
    }
};