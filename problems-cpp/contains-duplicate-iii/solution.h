/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int indexDiff, int valueDiff) {
        int n = nums.size();

        int r = 0;
        multiset<int> S;
        for (int i = 0; i < n; i++) {
            while (r < n && r - i <= indexDiff) {
                S.insert(nums[r]);
                r++;
            }
            S.erase(S.find(nums[i]));

            int left = nums[i] - valueDiff;
            int right = nums[i] + valueDiff;

            auto it1 = S.lower_bound(left);
            auto it2 = S.upper_bound(right);
            if (it1 != it2) {
                debug(i, nums[i], left, right, S);
                return true;
            }
        }
        return false;
    }
};