/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

class Solution {
   public:
    string countOfAtoms(string s) {
        vector<pair<string, int>> V;
        vector<int> stk;

        int n = s.size();
        int now = 0;
        while (now < n) {
            if (s[now] == '(') {
                stk.push_back(V.size());
                now++;
            } else if (s[now] == ')') {
                int idx = stk.back();
                stk.pop_back();

                int go = now + 1;
                int val = 0;
                while (go < n && s[go] >= '0' && s[go] <= '9') {
                    val = val * 10 + s[go] - '0';
                    go++;
                }
                if (val == 0) val = 1;
                if (val != 1) {
                    for (int i = idx; i < V.size(); i++) {
                        V[i].second *= val;
                    }
                }
                now = go;
            } else {
                string name = string(1, s[now]);
                int go = now + 1;
                while (go < n && s[go] >= 'a' && s[go] <= 'z') {
                    name += s[go];
                    go++;
                }

                int go2 = go;
                int val = 0;
                while (go2 < n && s[go2] >= '0' && s[go2] <= '9') {
                    val = val * 10 + s[go2] - '0';
                    go2++;
                }
                if (val == 0) val = 1;
                V.push_back({name, val});
                now = go2;
            }
        }

        map<string, int> M;
        for (auto it : V) {
            M[it.first] += it.second;
        }

        string ans = "";
        for (auto it : M) {
            ans += it.first;
            if (it.second > 1) {
                ans += to_string(it.second);
            }
        }
        return ans;
    }
};