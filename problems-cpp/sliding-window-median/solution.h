/*
Code generated by https://github.com/goodstudyqaq/leetcode-local-tester
*/
#if __has_include("../utils/cpp/help.hpp")
#include "../utils/cpp/help.hpp"
#elif __has_include("../../utils/cpp/help.hpp")
#include "../../utils/cpp/help.hpp"
#else
#define debug(...) 42
#endif

#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

typedef pair<int, int> pii;
typedef tree<pii, null_type, less<pii>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

class Solution {
   public:
    vector<double> medianSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        ordered_set s;
        for (int i = 0; i < k; i++) {
            s.insert({nums[i], i});
        }
        vector<double> ans(n - k + 1);
        int l = (k - 1) / 2, r = k / 2;
        for (int i = 0; i < n - k + 1; i++) {
            ans[i] = 1.0 * (1LL * s.find_by_order(l)->first + s.find_by_order(r)->first) / 2.0;
            s.erase(s.find({nums[i], i}));
            if (i + k < n)
                s.insert({nums[i + k], i + k});
        }
        return ans;
    }
};